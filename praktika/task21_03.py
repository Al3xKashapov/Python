def date_to_word(n):

    date = {
        1: "первое", 2: "второе", 3: "третье", 4: "четвёртое", 5: "пятое",
        6: "шестое", 7: "седьмое", 8: "восьмое", 9: "девятое", 10: "десятое",
        11: "одиннадцатое", 12: "двенадцатое", 13: "тринадцатое",
        14: "четырнадцатое", 15: "пятнадцатое", 16: "шестнадцатое",
        17: "семнадцатое", 18: "восемнадцатое", 19: "девятнадцатое",
        20: "двадцатое", 21: "двадцать первое", 22: "двадцать второе",
        23: "двадцать третье", 24: "двадцать четвёртое", 25: "двадцать пятое",
        26: "двадцать шестое", 27: "двадцать седьмое", 28: "двадцать восьмое",
        29: "двадцать девятое", 30: "тридцатое", 31: "тридцать первое"
    }

    # date = str(n)

    # d_part = int(date[0])  # Десятки

    # ed_part = int(date[1])  # Единицы

    # result = []

    # if 10 <= int(yr[2:]) <= 19:
    # result.append(des[int(yr[2:])])  # Обрабатываем числа 10-19
    # else:
    # if d_part in des:
    # result.append(des[d_part])
    # if ed_part in ed:
    # result.append(ed[ed_part])

    # return "".join(result)

    return date.get(n, str(n))


def month_to_word(n):

    months = {
        1: "января", 2: "февраля", 3: "марта", 4: "апреля", 5: "мая",
        6: "июня", 7: "июля", 8: "августа", 9: "сентября", 10: "октября",
        11: "ноября", 12: "декабря"
    }

    return months.get(n, "")


def year_to_word(n):

    tis = {1: "тысяча", 2: "две тысячи",
           2000: "двухтысячного", 1000: "тысячного"}

    sot = {
        0: "", 1: "сто", 2: "двести", 3: "триста", 4: "четыреста",
        5: "пятьсот", 6: "шестьсот", 7: "семьсот",
        8: "восемьсот", 9: "девятьсот"
    }
    des = {
        10: "десятого", 11: "одиннадцатого", 12: "двенадцатого",
        13: "тринадцатого", 14: "четырнадцатого",
        15: "пятнадцатого", 16: "шестнадцатого",
        17: "семнадцатого", 18: "восемнадцатого", 19: "девятнадцатого",
        2: "двадцать", 3: "тридцать", 4: "сорок", 5: "пятьдесят",
        6: "шестьдесят", 7: "семьдесят", 8: "восемьдесят", 9: "девяносто"
    }
    ed = {
        1: "первого", 2: "второго", 3: "третьего", 4: "четвёртого",
        5: "пятого", 6: "шестого", 7: "седьмого",
        8: "восьмого", 9: "девятого"
    }

    yr = str(n)

    '#Разбитие на тысячи, сотни, десятки и единицы'

    t_part = int(yr[:1])  # Тысячи

    s_part = int(yr[1])   # Сотни

    d_part = int(yr[2])  # Десятки

    ed_part = int(yr[3])  # Единицы

    result = []

    if yr[1] == '0':
        if yr[2] == '0':
            if yr[3] == '0':

                result.append(tis[int(yr)])

                return " ".join(result)

    if t_part in tis:
        result.append(tis[t_part])

    if s_part in sot:
        result.append(sot[s_part])

    if 10 <= int(yr[2:]) <= 19:
        result.append(des[int(yr[2:])])  # Если числа 10-19
    else:
        if d_part in des:
            result.append(des[d_part])
        if ed_part in ed:
            result.append(ed[ed_part])

    return " ".join(result)


def data_to_word(date_str):
    """Конвертирует дату формата 'ДД.ММ.ГГГГ' в текст"""
    try:
        day, month, year = map(int, date_str.split('.'))
        return f"{date_to_word(day)} {month_to_word(month)} {year_to_word(year)} года"
    except ValueError:
        return "Неверный формат!"


dateToWord = str(input("Введите дату в формате 'ДД.ММ.ГГГГ': \n"))


print(data_to_word(dateToWord))


# print(data_to_word("23.03.2025"))
# print(data_to_word("01.01.2000"))
# print(data_to_word("12.12.1999"))
# print(data_to_word("2.12.1998"))
